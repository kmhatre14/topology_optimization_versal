this is spsolve portion:

            float mat[ndof][ndof];
            float rhs[ndof];
            float z[ndof];
            for(int i = 0; i < nfree; ++i) {
                for(int j = 0; j < nfree; ++j) {
                    mat[i][j] = K_reduced[i][j];
                }
                rhs[i] = F_reduced[i];
                z[i] = 0.0f;
            }
            for(int i = 0; i < nfree; ++i) {
                int pivot = i;
                for(int j = i + 1; j < nfree; ++j) {
                    float val1 = mat[j][i];
                    if(val1 < 0) val1 = -val1;
                    float val2 = mat[pivot][i];
                    if(val2 < 0) val2 = - val2;
                    if(val1 > val2) {
                        pivot = j;
                    }
                }
                if(pivot != i) {
                    for(int k = 0; k < nfree; ++k) {
                        float temp = mat[i][k];
                        mat[i][k] = mat[pivot][k];
                        mat[pivot][k] = temp;
                    }
                    float tempRhs = rhs[i];
                    rhs[i] = rhs[pivot];
                    rhs[pivot] = tempRhs;
                }
                for(int j = i + 1; j < nfree; ++j) {
                    float factor = mat[j][i] / mat[i][i];
                    for(int k = i; k < nfree; ++k) {
                        mat[j][k] -= factor * mat[i][k];
                    }
                    rhs[j] -= factor * rhs[i];
                }
            }
            for(int i = nfree - 1; i >= 0; --i) {
                z[i] = rhs[i];
                for(int j = i + 1; j < nfree; ++j) {
                    z[i] -= mat[i][j] * z[j];
                }
                z[i] /= mat[i][i];
            }